name: CI/CD Deployment to Cloud Run

on:
  push:
    branches:
      - '**' # Trigger on any branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/143436458586/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
          service_account: 'github-actions-sa@japan-visa-predictions.iam.gserviceaccount.com'
          create_credentials_file: true
          export_environment_variables: true

      # Step 3: Debug Environment Variables
      - name: Debug Environment Variables
        run: env | grep -E 'ACTIONS_ID_TOKEN|GOOGLE|CLOUDSDK'

      # Step 4: Debug GCloud Authentication
      - name: Debug GCloud Authentication
        run: |
          echo "Auth List:"
          gcloud auth list
          echo "Config List:"
          gcloud config list
          echo "Projects List:"
          gcloud projects list

      # Step 5: Verify OIDC Token
      - name: Verify OIDC Token
        run: |
          echo "Fetching OIDC token..."
          export GITHUB_TOKEN=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
              "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r .value)

          echo "OIDC Token: $GITHUB_TOKEN"

          echo "Decoded Token (Header):"
          echo $GITHUB_TOKEN | cut -d "." -f1 | base64 -d 2>/dev/null || echo "Failed to decode header"

          echo "Decoded Token (Payload):"
          echo $GITHUB_TOKEN | cut -d "." -f2 | base64 -d 2>/dev/null || echo "Failed to decode payload"
        env:
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ steps.authenticate-to-google-cloud.outputs.actions_id_token_request_url }}
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ steps.authenticate-to-google-cloud.outputs.actions_id_token_request_token }}
        shell: bash

      # Step 6: Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: japan-visa-predictions

      # Step 7: Install Dependencies
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y docker.io sops

      # Step 8: Export SOPS Private Key
      - name: Export SOPS Private Key
        run: echo "${{ secrets.CI_AGE_KEY }}" > ~/.age-key

      # Step 9: Deploy to Cloud Run
      - name: Deploy to Cloud Run
        env:
          SOPS_AGE_KEY_FILE: ~/.age-key
        run: make deploy
